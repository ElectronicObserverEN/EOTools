// <auto-generated />
using System;
using EOTools.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EOTools.Migrations
{
    [DbContext(typeof(EOToolsDbContext))]
    [Migration("20230424192856_Upgrades")]
    partial class Upgrades
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("EOTools.DataBase.EquipmentUpgrades.EquipmentConvertToModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EquipmentAfterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EquipmentLevelAfter")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ImprovmentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ImprovmentId");

                    b.ToTable("Convertions", "EquipmentUpgrades");
                });

            modelBuilder.Entity("EOTools.DataBase.EquipmentUpgrades.EquipmentUpgradeHelpersDayModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Day")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HelperGroupId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("HelperGroupId", "Day");

                    b.ToTable("HelperGroupDay", "EquipmentUpgrades");
                });

            modelBuilder.Entity("EOTools.DataBase.EquipmentUpgrades.EquipmentUpgradeHelpersGroupModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ImprovmentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("HelperGroup", "EquipmentUpgrades");
                });

            modelBuilder.Entity("EOTools.DataBase.EquipmentUpgrades.EquipmentUpgradeHelpersShipModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("HelperGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ShipId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("HelperGroupId", "ShipId");

                    b.ToTable("HelperShip", "EquipmentUpgrades");
                });

            modelBuilder.Entity("EOTools.DataBase.EquipmentUpgrades.EquipmentUpgradeImprovmentCostDetailModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DevmatCost")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ImproveMatCost")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SliderDevmatCost")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SliderImproveMatCost")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ImprovmentCostDetail", "EquipmentUpgrades");
                });

            modelBuilder.Entity("EOTools.DataBase.EquipmentUpgrades.EquipmentUpgradeImprovmentCostModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ammo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Bauxite")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cost0To5")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cost6To9")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CostMax")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fuel")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ImprovmentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Steel")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ImprovmentCost", "EquipmentUpgrades");
                });

            modelBuilder.Entity("EOTools.DataBase.EquipmentUpgrades.EquipmentUpgradeImprovmentEquipmentCostDetailModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ImprovmentCostDetailId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ImprovmentCostDetailId", "ItemId");

                    b.ToTable("EquipmentCostDetail", "EquipmentUpgrades");
                });

            modelBuilder.Entity("EOTools.DataBase.EquipmentUpgrades.EquipmentUpgradeImprovmentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdEquipment")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Improvment", "EquipmentUpgrades");
                });

            modelBuilder.Entity("EOTools.DataBase.EquipmentUpgrades.EquipmentUpgradeImprovmentUseItemCostIDetailModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ImprovmentCostDetailId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ImprovmentCostDetailId", "ItemId");

                    b.ToTable("UseItemtCostDetail", "EquipmentUpgrades");
                });

            modelBuilder.Entity("EOTools.Models.EquipmentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ApiId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NameEN")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NameJP")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UpgradeData")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("EOTools.Translation.QuestManager.Events.EventModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ApiId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EndOnUpdateId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("StartOnUpdateId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("EOTools.Translation.QuestManager.Quests.QuestModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AddedOnUpdateId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ApiId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DescEN")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DescJP")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NameEN")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NameJP")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("RemovedOnUpdateId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SeasonId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tracker")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Code", "ApiId")
                        .IsUnique();

                    b.ToTable("Quests");
                });

            modelBuilder.Entity("EOTools.Translation.QuestManager.Seasons.SeasonModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AddedOnUpdateId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("RemovedOnUpdateId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Seasons");
                });

            modelBuilder.Entity("EOTools.Translation.QuestManager.Updates.UpdateModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EndTweetLink")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StartTweetLink")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan?>("UpdateEndTime")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("UpdateStartTime")
                        .HasColumnType("TEXT");

                    b.Property<bool>("WasLiveUpdate")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Updates");
                });
#pragma warning restore 612, 618
        }
    }
}
